/**
 * Below are the colors that are used in the app. The colors are defined in the light and dark mode.
 * There are many other ways to style your app. For example, [Nativewind](https://www.nativewind.dev/), [Tamagui](https://tamagui.dev/), [unistyles](https://reactnativeunistyles.vercel.app), etc.
 */

const tintColorLight = "#0a7ea4";
const tintColorDark = "#fff";

export const Colors = {
  light: {
    primary: "rgb(0, 100, 146)",
    onPrimary: "rgb(255, 255, 255)",
    primaryContainer: "rgb(201, 230, 255)",
    onPrimaryContainer: "rgb(0, 30, 47)",
    secondary: "rgb(171, 48, 76)",
    onSecondary: "rgb(255, 255, 255)",
    secondaryContainer: "rgb(255, 217, 221)",
    onSecondaryContainer: "rgb(64, 0, 18)",
    tertiary: "rgb(96, 82, 166)",
    onTertiary: "rgb(255, 255, 255)",
    tertiaryContainer: "rgb(230, 222, 255)",
    onTertiaryContainer: "rgb(27, 1, 97)",
    error: "rgb(186, 26, 26)",
    onError: "rgb(255, 255, 255)",
    errorContainer: "rgb(255, 218, 214)",
    onErrorContainer: "rgb(65, 0, 2)",
    background: "rgb(252, 252, 255)",
    onBackground: "rgb(26, 28, 30)",
    surface: "rgb(252, 252, 255)",
    onSurface: "rgb(26, 28, 30)",
    surfaceVariant: "rgb(221, 227, 234)",
    onSurfaceVariant: "rgb(65, 71, 77)",
    outline: "rgb(114, 120, 126)",
    outlineVariant: "rgb(193, 199, 206)",
    shadow: "rgb(0, 0, 0)",
    scrim: "rgb(0, 0, 0)",
    inverseSurface: "rgb(46, 49, 51)",
    inverseOnSurface: "rgb(240, 240, 243)",
    inversePrimary: "rgb(139, 206, 255)",
    elevation: {
      level0: "transparent",
      level1: "rgb(239, 244, 250)",
      level2: "rgb(232, 240, 246)",
      level3: "rgb(224, 235, 243)",
      level4: "rgb(222, 234, 242)",
      level5: "rgb(217, 231, 240)",
    },
    surfaceDisabled: "rgba(26, 28, 30, 0.12)",
    onSurfaceDisabled: "rgba(26, 28, 30, 0.38)",
    backdrop: "rgba(43, 49, 55, 0.4)",
  },
  dark: {
    primary: "rgb(139, 206, 255)",
    onPrimary: "rgb(0, 52, 78)",
    primaryContainer: "rgb(0, 75, 111)",
    onPrimaryContainer: "rgb(201, 230, 255)",
    secondary: "rgb(255, 178, 187)",
    onSecondary: "rgb(103, 0, 34)",
    secondaryContainer: "rgb(138, 21, 53)",
    onSecondaryContainer: "rgb(255, 217, 221)",
    tertiary: "rgb(201, 190, 255)",
    onTertiary: "rgb(49, 32, 117)",
    tertiaryContainer: "rgb(72, 57, 141)",
    onTertiaryContainer: "rgb(230, 222, 255)",
    error: "rgb(255, 180, 171)",
    onError: "rgb(105, 0, 5)",
    errorContainer: "rgb(147, 0, 10)",
    onErrorContainer: "rgb(255, 180, 171)",
    background: "rgb(26, 28, 30)",
    onBackground: "rgb(226, 226, 229)",
    surface: "rgb(26, 28, 30)",
    onSurface: "rgb(226, 226, 229)",
    surfaceVariant: "rgb(65, 71, 77)",
    onSurfaceVariant: "rgb(193, 199, 206)",
    outline: "rgb(139, 145, 152)",
    outlineVariant: "rgb(65, 71, 77)",
    shadow: "rgb(0, 0, 0)",
    scrim: "rgb(0, 0, 0)",
    inverseSurface: "rgb(226, 226, 229)",
    inverseOnSurface: "rgb(46, 49, 51)",
    inversePrimary: "rgb(0, 100, 146)",
    elevation: {
      level0: "transparent",
      level1: "rgb(32, 37, 41)",
      level2: "rgb(35, 42, 48)",
      level3: "rgb(38, 48, 55)",
      level4: "rgb(40, 49, 57)",
      level5: "rgb(42, 53, 62)",
    },
    surfaceDisabled: "rgba(226, 226, 229, 0.12)",
    onSurfaceDisabled: "rgba(226, 226, 229, 0.38)",
    backdrop: "rgba(43, 49, 55, 0.4)",
  },
};
